/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package odev3;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;
import static spark.Spark.get;
import static spark.Spark.post;
import static spark.Spark.port;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        // System.out.println(new App().getGreeting());
        // get("/compute", (req, res) -> "Hello World");

        Logger logger = LogManager.getLogger(App.class);
        // logger.error("message");
        String change_port = System.getenv("PORT");

        int port = change_port != null ? Integer.parseInt(System.getenv("PORT")) : 4567;

        port(port);

        get("/compute",
                (rq, rs) -> {
                    Map<String, String> map = new HashMap<String, String>();
                    map.put("result2", "Donem notu hesaplama  ");
                    return new ModelAndView(map, "compute.mustache");
                },
                new MustacheTemplateEngine());

        post("/compute", // url
                (rq, rs) -> {

                    ArrayList<String> inputList = new ArrayList<>();
                    ArrayList<Integer> inputs = new ArrayList<>();

                    String[] notlar1 = { "AA", "BA", "BB", "CB", "CC", "DC", "DD", "FD", "FF" };
                    String[] notlar2 = { "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D+", "D", "F" };
                    String[] notlar3 = { "A1", "A2", "A3", "B1", "B2", "B3", "C1", "C2", "C3", "D", "F" };

                    List<String> list = new ArrayList<String>();

                    String x = rq.queryParams("harfler");
                    System.out.println("x1 :" + x);
                    if (x.equals("1")) {
                        for (String i : notlar1) {
                            list.add(i);

                        }
                        System.out.println("x" + x);
                    } else if (x.equals("2")) {
                        for (String i : notlar2) {
                            list.add(i);
                        }
                        System.out.println("x" + x);
                    } else if (x.equals("3")) {
                        for (String i : notlar3) {
                            list.add(i);
                        }
                        System.out.println("x" + x);
                    }

                    int i = 1;
                    while (i < 4) {
                        inputList.add("input" + i);
                        i = i + 1;
                    }
                    for (int q = 0; q < inputList.size(); q++) {

                        String input = rq.queryParams(inputList.get(q));

                        System.out.println("str:" + input);

                        int deger = Integer.parseInt(input);
                        inputs.add(deger);

                    }
                    String not = hesapla(list, inputs.get(0), inputs.get(1), inputs.get(2));
                    Map<String, String> map = new HashMap<String, String>();
                    map.put("result", not);
                    return new ModelAndView(map, "compute.mustache");
                    // sonu√ß sitede
                },
                new MustacheTemplateEngine());

    }

    public static boolean search(ArrayList<Integer> array, int e) {
        System.out.println("inside search");
        if (array == null)
            return false;
        for (int elt : array) {
            if (elt == e)
                return true;
        }
        return false;
    }

    public static String hesapla(List<String> list, int vize, int proje, int final_) {

        int not = (vize * 25 + proje * 25 + final_ * 50) / 100;
        System.out.println(vize);
        System.out.println(proje);
        System.out.println(final_);
        System.out.println("_____ ");
        System.out.println(list.size());
        if (list.size() != 0) {
            int aralik = (int) ((100 - 40) / list.size());
            System.out.println("aralik:" + aralik);
            System.out.println("not:" + not);
            if (not < 40) {
                System.out.println("return " + list.get(list.size() - 1));
                return list.get(list.size() - 1);
            } 
            else {
                int list_index = (not - 40) / aralik;
                System.out.println("list_index:"+list_index);
                if (list_index >= list.size()) {
                    System.out.println("return " + list.get(0));
                    return list.get(0);
                } else {
                    System.out.println("return " + (list.size() - list_index));
                    return list.get(list.size() - list_index - 1);

                }
            }
        } else {
            return "null";
        }

    }

}
